import React, { useState, useEffect } from 'react';
import { Card } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Progress } from "@/components/ui/progress";
import { 
  Bug, 
  Shield, 
  AlertTriangle, 
  CheckCircle, 
  Clock,
  TrendingUp,
  Server,
  Globe,
  Database,
  Laptop
} from "lucide-react";

interface Vulnerability {
  id: string;
  cve: string;
  title: string;
  severity: 'Low' | 'Medium' | 'High' | 'Critical';
  cvssScore: number;
  status: 'Open' | 'In Progress' | 'Patched' | 'Mitigated' | 'Accepted Risk';
  affectedAssets: string[];
  discoveredDate: string;
  dueDate: string;
  assignee?: string;
  description: string;
  solution: string;
  exploitAvailable: boolean;
  patchAvailable: boolean;
  category: 'Network' | 'Application' | 'Operating System' | 'Database' | 'Web Application';
  vendor: string;
  product: string;
  version: string;
}

interface VulnMetrics {
  totalVulnerabilities: number;
  criticalVulns: number;
  highVulns: number;
  mediumVulns: number;
  lowVulns: number;
  patchedThisMonth: number;
  overduePatchs: number;
  meanTimeToRemediate: number; // days
  riskScore: number; // 0-100
}

const VulnerabilityManagement = () => {
  const [vulnerabilities, setVulnerabilities] = useState<Vulnerability[]>([]);
  const [metrics, setMetrics] = useState<VulnMetrics | null>(null);
  const [selectedVuln, setSelectedVuln] = useState<Vulnerability | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // Simulate loading vulnerability data
    setTimeout(() => {
      setVulnerabilities(generateMockVulnerabilities());
      setMetrics(generateMockMetrics());
      setLoading(false);
    }, 1200);
  }, []);

  const generateMockVulnerabilities = (): Vulnerability[] => {
    return [
      {
        id: '1',
        cve: 'CVE-2024-0001',
        title: 'Remote Code Execution in Apache HTTP Server',
        severity: 'Critical',
        cvssScore: 9.8,
        status: 'Open',
        affectedAssets: ['WEB-01', 'WEB-02', 'DMZ-PROXY'],
        discoveredDate: '2024-01-15T10:30:00Z',
        dueDate: '2024-01-22T23:59:59Z',
        assignee: 'Infrastructure Team',
        description: 'A critical vulnerability in Apache HTTP Server allows remote attackers to execute arbitrary code.',
        solution: 'Upgrade to Apache HTTP Server version 2.4.58 or apply the security patch.',
        exploitAvailable: true,
        patchAvailable: true,
        category: 'Web Application',
        vendor: 'Apache',
        product: 'HTTP Server',
        version: '2.4.55'
      },
      {
        id: '2',
        cve: 'CVE-2024-0002',
        title: 'SQL Injection in Custom Application',
        severity: 'High',
        cvssScore: 8.1,
        status: 'In Progress',
        affectedAssets: ['APP-DB-01', 'WEB-APP-PORTAL'],
        discoveredDate: '2024-01-18T14:20:00Z',
        dueDate: '2024-01-25T23:59:59Z',
        assignee: 'Development Team',
        description: 'SQL injection vulnerability in user authentication module allows data extraction.',
        solution: 'Implement parameterized queries and input validation.',
        exploitAvailable: false,
        patchAvailable: false,
        category: 'Application',
        vendor: 'Internal',
        product: 'Customer Portal',
        version: '3.2.1'
      },
      {
        id: '3',
        cve: 'CVE-2023-9999',
        title: 'Privilege Escalation in Windows Server',
        severity: 'High',
        cvssScore: 7.8,
        status: 'Patched',
        affectedAssets: ['DC-01', 'FILE-SERVER-01', 'MAIL-01'],
        discoveredDate: '2024-01-10T09:15:00Z',
        dueDate: '2024-01-17T23:59:59Z',
        assignee: 'System Administration',
        description: 'Local privilege escalation vulnerability in Windows Server 2019.',
        solution: 'Install KB5034441 security update.',
        exploitAvailable: true,
        patchAvailable: true,
        category: 'Operating System',
        vendor: 'Microsoft',
        product: 'Windows Server',
        version: '2019'
      },
      {
        id: '4',
        cve: 'CVE-2024-0003',
        title: 'Cross-Site Scripting in Web Portal',
        severity: 'Medium',
        cvssScore: 6.1,
        status: 'Open',
        affectedAssets: ['WEB-PORTAL-01'],
        discoveredDate: '2024-01-19T16:45:00Z',
        dueDate: '2024-02-02T23:59:59Z',
        assignee: 'Security Team',
        description: 'Stored XSS vulnerability in user profile section.',
        solution: 'Implement proper input sanitization and output encoding.',
        exploitAvailable: false,
        patchAvailable: false,
        category: 'Web Application',
        vendor: 'Internal',
        product: 'Employee Portal',
        version: '2.1.0'
      },
      {
        id: '5',
        cve: 'CVE-2023-8888',
        title: 'Buffer Overflow in Network Device',
        severity: 'Critical',
        cvssScore: 9.0,
        status: 'Mitigated',
        affectedAssets: ['ROUTER-01', 'SWITCH-CORE-01'],
        discoveredDate: '2024-01-12T11:30:00Z',
        dueDate: '2024-01-19T23:59:59Z',
        assignee: 'Network Team',
        description: 'Buffer overflow in network device firmware allows remote code execution.',
        solution: 'Firmware update to version 15.2.7 or implement network segmentation.',
        exploitAvailable: true,
        patchAvailable: true,
        category: 'Network',
        vendor: 'Cisco',
        product: 'IOS',
        version: '15.2.4'
      }
    ];
  };

  const generateMockMetrics = (): VulnMetrics => {
    return {
      totalVulnerabilities: 247,
      criticalVulns: 12,
      highVulns: 34,
      mediumVulns: 89,
      lowVulns: 112,
      patchedThisMonth: 67,
      overduePatchs: 8,
      meanTimeToRemediate: 14,
      riskScore: 72
    };
  };

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case 'Critical': return 'bg-red-900/30 text-red-400 border-red-600/40';
      case 'High': return 'bg-orange-900/30 text-orange-400 border-orange-600/40';
      case 'Medium': return 'bg-yellow-900/30 text-yellow-400 border-yellow-600/40';
      case 'Low': return 'bg-blue-900/30 text-blue-400 border-blue-600/40';
      default: return 'bg-gray-900/30 text-gray-400 border-gray-600/40';
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'Open': return 'bg-red-900/30 text-red-400';
      case 'In Progress': return 'bg-yellow-900/30 text-yellow-400';
      case 'Patched': return 'bg-green-900/30 text-green-400';
      case 'Mitigated': return 'bg-blue-900/30 text-blue-400';
      case 'Accepted Risk': return 'bg-gray-900/30 text-gray-400';
      default: return 'bg-gray-900/30 text-gray-400';
    }
  };

  const getCategoryIcon = (category: string) => {
    switch (category) {
      case 'Network': return <Globe className="w-4 h-4" />;
      case 'Application': return <Laptop className="w-4 h-4" />;
      case 'Operating System': return <Server className="w-4 h-4" />;
      case 'Database': return <Database className="w-4 h-4" />;
      case 'Web Application': return <Globe className="w-4 h-4" />;
      default: return <Bug className="w-4 h-4" />;
    }
  };

  const updateVulnStatus = (vulnId: string, newStatus: Vulnerability['status']) => {
    setVulnerabilities(vulnerabilities.map(vuln => 
      vuln.id === vulnId ? { ...vuln, status: newStatus } : vuln
    ));
  };

  const isOverdue = (dueDate: string) => {
    return new Date(dueDate) < new Date();
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500"></div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h2 className="text-2xl font-bold flex items-center gap-2">
            <Bug className="w-6 h-6 text-blue-500" />
            Vulnerability Management
          </h2>
          <p className="text-gray-400">Track and remediate security vulnerabilities across your infrastructure</p>
        </div>
        <div className="flex items-center gap-2">
          <Button className="flex items-center gap-2">
            <Shield className="w-4 h-4" />
            Run Scan
          </Button>
        </div>
      </div>

      {/* Vulnerability Metrics Dashboard */}
      <div className="grid grid-cols-1 md:grid-cols-5 gap-4">
        <Card className="bg-gray-800/50 border-gray-700 p-4">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm text-gray-400">Total Vulns</p>
              <p className="text-2xl font-bold">{metrics?.totalVulnerabilities}</p>
            </div>
            <Bug className="w-8 h-8 text-blue-500" />
          </div>
        </Card>

        <Card className="bg-gray-800/50 border-gray-700 p-4">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm text-gray-400">Critical</p>
              <p className="text-2xl font-bold text-red-400">{metrics?.criticalVulns}</p>
            </div>
            <AlertTriangle className="w-8 h-8 text-red-500" />
          </div>
        </Card>

        <Card className="bg-gray-800/50 border-gray-700 p-4">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm text-gray-400">High</p>
              <p className="text-2xl font-bold text-orange-400">{metrics?.highVulns}</p>
            </div>
            <AlertTriangle className="w-8 h-8 text-orange-500" />
          </div>
        </Card>

        <Card className="bg-gray-800/50 border-gray-700 p-4">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm text-gray-400">Patched</p>
              <p className="text-2xl font-bold text-green-400">{metrics?.patchedThisMonth}</p>
              <p className="text-xs text-gray-500">this month</p>
            </div>
            <CheckCircle className="w-8 h-8 text-green-500" />
          </div>
        </Card>

        <Card className="bg-gray-800/50 border-gray-700 p-4">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm text-gray-400">Risk Score</p>
              <p className="text-2xl font-bold text-yellow-400">{metrics?.riskScore}</p>
              <p className="text-xs text-gray-500">out of 100</p>
            </div>
            <TrendingUp className="w-8 h-8 text-yellow-500" />
          </div>
        </Card>
      </div>

      <Tabs defaultValue="vulnerabilities" className="w-full">
        <TabsList className="grid grid-cols-4 mb-6">
          <TabsTrigger value="vulnerabilities">Vulnerabilities</TabsTrigger>
          <TabsTrigger value="assets">Asset View</TabsTrigger>
          <TabsTrigger value="reports">Reports</TabsTrigger>
          <TabsTrigger value="settings">Settings</TabsTrigger>
        </TabsList>

        <TabsContent value="vulnerabilities" className="space-y-6">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <Card className="bg-gray-800/50 border-gray-700 p-6">
              <h3 className="text-lg font-semibold mb-4 flex items-center gap-2">
                <Bug className="w-5 h-5 text-blue-500" />
                Active Vulnerabilities
              </h3>
              <div className="space-y-4 max-h-96 overflow-y-auto">
                {vulnerabilities.map((vuln) => (
                  <div 
                    key={vuln.id}
                    className={`border rounded-lg p-4 cursor-pointer transition-colors hover:bg-gray-700/30 ${
                      selectedVuln?.id === vuln.id ? 'border-blue-500 bg-blue-900/20' : 'border-gray-700'
                    } ${isOverdue(vuln.dueDate) && vuln.status === 'Open' ? 'border-red-500/50' : ''}`}
                    onClick={() => setSelectedVuln(vuln)}
                  >
                    <div className="flex items-center justify-between mb-2">
                      <div className="flex items-center gap-2">
                        {getCategoryIcon(vuln.category)}
                        <h4 className="font-medium">{vuln.cve}</h4>
                      </div>
                      <div className="flex items-center gap-2">
                        <Badge className={getSeverityColor(vuln.severity)}>
                          {vuln.severity}
                        </Badge>
                        <Badge className={getStatusColor(vuln.status)}>
                          {vuln.status}
                        </Badge>
                      </div>
                    </div>
                    
                    <p className="text-sm text-gray-400 mb-2">{vuln.title}</p>
                    
                    <div className="flex items-center justify-between text-xs text-gray-500">
                      <span>CVSS: {vuln.cvssScore}</span>
                      <span>Assets: {vuln.affectedAssets.length}</span>
                      <span className={isOverdue(vuln.dueDate) && vuln.status === 'Open' ? 'text-red-400' : ''}>
                        Due: {new Date(vuln.dueDate).toLocaleDateString()}
                      </span>
                    </div>
                    
                    {isOverdue(vuln.dueDate) && vuln.status === 'Open' && (
                      <div className="mt-2">
                        <Badge className="bg-red-900/30 text-red-400 text-xs">
                          <Clock className="w-3 h-3 mr-1" />
                          Overdue
                        </Badge>
                      </div>
                    )}
                  </div>
                ))}
              </div>
            </Card>

            {selectedVuln && (
              <Card className="bg-gray-800/50 border-gray-700 p-6">
                <h3 className="text-lg font-semibold mb-4 flex items-center gap-2">
                  <Shield className="w-5 h-5 text-blue-500" />
                  Vulnerability Details
                </h3>
                
                <div className="space-y-4">
                  <div>
                    <h4 className="font-medium mb-2">{selectedVuln.cve}: {selectedVuln.title}</h4>
                    <p className="text-sm text-gray-400">{selectedVuln.description}</p>
                  </div>

                  <div className="grid grid-cols-2 gap-4">
                    <div>
                      <p className="text-sm font-medium text-gray-300">Severity</p>
                      <Badge className={getSeverityColor(selectedVuln.severity)}>
                        {selectedVuln.severity}
                      </Badge>
                    </div>
                    <div>
                      <p className="text-sm font-medium text-gray-300">CVSS Score</p>
                      <p className="text-sm font-bold">{selectedVuln.cvssScore}/10</p>
                    </div>
                  </div>

                  <div className="grid grid-cols-2 gap-4">
                    <div>
                      <p className="text-sm font-medium text-gray-300">Exploit Available</p>
                      <Badge className={selectedVuln.exploitAvailable ? 'bg-red-900/30 text-red-400' : 'bg-green-900/30 text-green-400'}>
                        {selectedVuln.exploitAvailable ? 'Yes' : 'No'}
                      </Badge>
                    </div>
                    <div>
                      <p className="text-sm font-medium text-gray-300">Patch Available</p>
                      <Badge className={selectedVuln.patchAvailable ? 'bg-green-900/30 text-green-400' : 'bg-red-900/30 text-red-400'}>
                        {selectedVuln.patchAvailable ? 'Yes' : 'No'}
                      </Badge>
                    </div>
                  </div>

                  <div>
                    <p className="text-sm font-medium text-gray-300 mb-2">Affected Assets</p>
                    <div className="flex flex-wrap gap-2">
                      {selectedVuln.affectedAssets.map((asset, index) => (
                        <Badge key={index} variant="outline" className="text-xs">
                          {asset}
                        </Badge>
                      ))}
                    </div>
                  </div>

                  <div>
                    <p className="text-sm font-medium text-gray-300 mb-2">Product Information</p>
                    <div className="bg-gray-900/50 p-3 rounded">
                      <p className="text-sm"><span className="text-gray-400">Vendor:</span> {selectedVuln.vendor}</p>
                      <p className="text-sm"><span className="text-gray-400">Product:</span> {selectedVuln.product}</p>
                      <p className="text-sm"><span className="text-gray-400">Version:</span> {selectedVuln.version}</p>
                    </div>
                  </div>

                  <div>
                    <p className="text-sm font-medium text-gray-300 mb-2">Solution</p>
                    <p className="text-sm bg-gray-900/50 p-3 rounded">{selectedVuln.solution}</p>
                  </div>

                  <div className="flex gap-2">
                    <Button 
                      size="sm" 
                      onClick={() => updateVulnStatus(selectedVuln.id, 'In Progress')}
                      disabled={selectedVuln.status === 'In Progress'}
                    >
                      Start Remediation
                    </Button>
                    <Button 
                      size="sm" 
                      variant="outline"
                      onClick={() => updateVulnStatus(selectedVuln.id, 'Mitigated')}
                    >
                      Mark Mitigated
                    </Button>
                  </div>
                </div>
              </Card>
            )}
          </div>
        </TabsContent>

        <TabsContent value="assets">
          <Card className="bg-gray-800/50 border-gray-700 p-6">
            <h3 className="text-lg font-semibold mb-4">Asset Vulnerability Summary</h3>
            <div className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div className="border border-gray-700 rounded-lg p-4">
                  <div className="flex items-center gap-3 mb-3">
                    <Server className="w-8 h-8 text-blue-500" />
                    <div>
                      <h4 className="font-medium">WEB-01</h4>
                      <p className="text-sm text-gray-400">Web Server</p>
                    </div>
                  </div>
                  <div className="space-y-2">
                    <div className="flex justify-between text-sm">
                      <span>Critical:</span>
                      <span className="text-red-400 font-medium">2</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span>High:</span>
                      <span className="text-orange-400 font-medium">5</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span>Medium:</span>
                      <span className="text-yellow-400 font-medium">8</span>
                    </div>
                  </div>
                </div>

                <div className="border border-gray-700 rounded-lg p-4">
                  <div className="flex items-center gap-3 mb-3">
                    <Database className="w-8 h-8 text-purple-500" />
                    <div>
                      <h4 className="font-medium">DB-01</h4>
                      <p className="text-sm text-gray-400">Database Server</p>
                    </div>
                  </div>
                  <div className="space-y-2">
                    <div className="flex justify-between text-sm">
                      <span>Critical:</span>
                      <span className="text-red-400 font-medium">0</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span>High:</span>
                      <span className="text-orange-400 font-medium">1</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span>Medium:</span>
                      <span className="text-yellow-400 font-medium">3</span>
                    </div>
                  </div>
                </div>

                <div className="border border-gray-700 rounded-lg p-4">
                  <div className="flex items-center gap-3 mb-3">
                    <Globe className="w-8 h-8 text-green-500" />
                    <div>
                      <h4 className="font-medium">ROUTER-01</h4>
                      <p className="text-sm text-gray-400">Network Device</p>
                    </div>
                  </div>
                  <div className="space-y-2">
                    <div className="flex justify-between text-sm">
                      <span>Critical:</span>
                      <span className="text-red-400 font-medium">1</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span>High:</span>
                      <span className="text-orange-400 font-medium">0</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span>Medium:</span>
                      <span className="text-yellow-400 font-medium">2</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </Card>
        </TabsContent>

        <TabsContent value="reports">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <Card className="bg-gray-800/50 border-gray-700 p-6">
              <h3 className="text-lg font-semibold mb-4">Remediation Progress</h3>
              <div className="space-y-4">
                <div>
                  <div className="flex justify-between mb-2">
                    <span className="text-sm">Critical Vulnerabilities</span>
                    <span className="text-sm font-medium">75% Remediated</span>
                  </div>
                  <Progress value={75} className="h-2" />
                </div>
                
                <div>
                  <div className="flex justify-between mb-2">
                    <span className="text-sm">High Vulnerabilities</span>
                    <span className="text-sm font-medium">60% Remediated</span>
                  </div>
                  <Progress value={60} className="h-2" />
                </div>
                
                <div>
                  <div className="flex justify-between mb-2">
                    <span className="text-sm">Medium Vulnerabilities</span>
                    <span className="text-sm font-medium">45% Remediated</span>
                  </div>
                  <Progress value={45} className="h-2" />
                </div>
              </div>
            </Card>

            <Card className="bg-gray-800/50 border-gray-700 p-6">
              <h3 className="text-lg font-semibold mb-4">Trending Metrics</h3>
              <div className="space-y-4">
                <div className="flex justify-between items-center">
                  <span className="text-sm">New Vulnerabilities</span>
                  <span className="text-sm text-red-400">↗ +15%</span>
                </div>
                <div className="flex justify-between items-center">
                  <span className="text-sm">Patch Deployment</span>
                  <span className="text-sm text-green-400">↗ +8%</span>
                </div>
                <div className="flex justify-between items-center">
                  <span className="text-sm">Mean Time to Remediate</span>
                  <span className="text-sm text-green-400">↘ -2 days</span>
                </div>
                <div className="flex justify-between items-center">
                  <span className="text-sm">Risk Score</span>
                  <span className="text-sm text-yellow-400">↗ +5 points</span>
                </div>
              </div>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="settings">
          <Card className="bg-gray-800/50 border-gray-700 p-6">
            <h3 className="text-lg font-semibold mb-4">Vulnerability Management Settings</h3>
            <div className="space-y-6">
              <div>
                <h4 className="font-medium mb-3">Scan Configuration</h4>
                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <span className="text-sm">Automatic Scanning</span>
                    <Badge className="bg-green-900/30 text-green-400">Enabled</Badge>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm">Scan Frequency</span>
                    <span className="text-sm">Daily</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm">Critical Alert Threshold</span>
                    <span className="text-sm">CVSS ≥ 9.0</span>
                  </div>
                </div>
              </div>

              <div>
                <h4 className="font-medium mb-3">SLA Configuration</h4>
                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <span className="text-sm">Critical Remediation SLA</span>
                    <span className="text-sm">7 days</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm">High Remediation SLA</span>
                    <span className="text-sm">14 days</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm">Medium Remediation SLA</span>
                    <span className="text-sm">30 days</span>
                  </div>
                </div>
              </div>
            </div>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
};

export default VulnerabilityManagement;